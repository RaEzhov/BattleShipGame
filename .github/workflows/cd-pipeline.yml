name: CD pipeline

on:
  workflow_run:
    workflows: ["CI pipeline"]
    types:
      - completed
    branches:
      - 'master'


jobs:
  push_to_dockerhub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/battleship-server
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
      - name: Send status
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.workflow }}: Push Docker image to Docker Hub ${{ job.status }}
        env:
          status: ${{job.status}}

  deploy_on_server:
    name: Deploy updated image
    needs: [push_to_dockerhub]
    runs-on: ubuntu-20.04
    steps:
      - name: Update image on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ./server
            docker-compose down
            docker-compose pull server
            docker-compose up -d --build
            
      - name: Send status
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.workflow }}: Deploy updated image ${{ job.status }}
        env:
          status: ${{job.status}}
          
  send_result:
    if: ${{ always() }}
    name: Send result
    needs: [deploy_on_server]
    runs-on: ubuntu-20.04
    steps:
      - name: Sending telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID}}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN}}
          message: |
            ${{ github.workflow }} ended
