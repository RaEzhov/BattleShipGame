name: CD pipeline

on:
  workflow_run:
    workflows: ["CI pipeline"]
    types:
      - completed
      
jobs:
  push_to_dockerhub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: raezhov/

      - name: Build the Docker image
        run: |
          docker build . --file ./Dockerfile --tag ${{ DOCKER_USERNAME }}/battleship-server:${{ steps.date.outputs.date }}    

      - name: Docker push
        run: docker push ${{ DOCKER_USERNAME }}/battleship-server:${{ steps.date.outputs.date }}
      
      - name: Send status
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.workflow }}: Push Docker image to Docker Hub ${{ job.status }}
        env:
          status: ${{job.status}}

  deploy_on_server:
    name: Deploy updated image
    needs: [push_to_dockerhub]
    runs-on: ubuntu-20.04
    steps:
      - name: Update image on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ./server
            docker-compose down
            docker-compose pull server
            docker-compose up -d --build
            
      - name: Send status
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ${{ github.workflow }}: Deploy updated image ${{ job.status }}
        env:
          status: ${{job.status}}
